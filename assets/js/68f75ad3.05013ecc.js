"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1129],{6644:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"api/actions/function","title":"Function Actions","description":"Function actions call Python functions. This page documents how to configure and use function actions in your CLI.","source":"@site/docs/api/actions/function.md","sourceDirName":"api/actions","slug":"/api/actions/function","permalink":"/hexagon/docs/api/actions/function","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/actions/function.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"apiSidebar","previous":{"title":"Shell Actions","permalink":"/hexagon/docs/api/actions/shell"},"next":{"title":"Output API","permalink":"/hexagon/docs/api/support/output"}}');var i=t(4848),s=t(8453);const a={sidebar_position:3},c="Function Actions",l={},r=[{value:"Configuration",id:"configuration",level:2},{value:"Implementing Functions",id:"implementing-functions",level:2},{value:"Function Parameters",id:"function-parameters",level:2},{value:"Accessing CLI Context",id:"accessing-cli-context",level:2},{value:"Examples",id:"examples",level:2},{value:"Simple Function Tool",id:"simple-function-tool",level:3},{value:"Function Tool with Parameters",id:"function-tool-with-parameters",level:3},{value:"Function Tool with CLI Context",id:"function-tool-with-cli-context",level:3},{value:"Best Practices",id:"best-practices",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"function-actions",children:"Function Actions"})}),"\n",(0,i.jsx)(e.p,{children:"Function actions call Python functions. This page documents how to configure and use function actions in your CLI."}),"\n",(0,i.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(e.p,{children:["Function actions are configured using the ",(0,i.jsx)(e.code,{children:"FunctionTool"})," class with ",(0,i.jsx)(e.code,{children:"type"})," set to ",(0,i.jsx)(e.code,{children:"function"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"- name: analyze\n  alias: a\n  long_name: Analyze Data\n  description: Run data analysis\n  type: function\n  function: custom_tools.analysis.analyze_data\n"})}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"function"})," property specifies the fully qualified function name. Hexagon will import the module and call the function when the tool is executed."]}),"\n",(0,i.jsx)(e.h2,{id:"implementing-functions",children:"Implementing Functions"}),"\n",(0,i.jsxs)(e.p,{children:["To implement a function for a function tool, create a Python module in your ",(0,i.jsx)(e.code,{children:"custom_tools_dir"})," with the function implementation:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# custom_tools/analysis.py\n\ndef analyze_data():\n    """Analyze data and return results."""\n    print("Analyzing data...")\n    \n    # Your analysis logic here\n    results = [\n        "Analysis complete",\n        "Found 3 issues",\n        "Performance: 95%"\n    ]\n    \n    return results\n'})}),"\n",(0,i.jsxs)(e.p,{children:["Functions should return a list of strings, which will be displayed as output in the CLI using the ",(0,i.jsx)(e.code,{children:"log.result()"})," method. If a function doesn't return anything, Hexagon will display a default success message."]}),"\n",(0,i.jsx)(e.h2,{id:"function-parameters",children:"Function Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Functions can accept parameters, which will be passed from the command line:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def greet(name):\n    """Greet a person by name."""\n    return [f"Hello, {name}!"]\n'})}),"\n",(0,i.jsx)(e.p,{children:"When the tool is executed, Hexagon will prompt the user for the parameter values."}),"\n",(0,i.jsx)(e.h2,{id:"accessing-cli-context",children:"Accessing CLI Context"}),"\n",(0,i.jsx)(e.p,{children:"Functions can access the CLI context by defining parameters with specific names:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def show_context(cli, tools, envs, env=None):\n    """Show the CLI context."""\n    output = [\n        f"CLI Name: {cli.name}",\n        f"CLI Command: {cli.command}",\n        f"Number of Tools: {len(tools)}",\n        f"Number of Environments: {len(envs)}",\n    ]\n    \n    if env:\n        output.append(f"Current Environment: {env.name}")\n    \n    return output\n'})}),"\n",(0,i.jsxs)(e.p,{children:["Hexagon will automatically pass the ",(0,i.jsx)(e.code,{children:"cli"}),", ",(0,i.jsx)(e.code,{children:"tools"}),", ",(0,i.jsx)(e.code,{children:"envs"}),", and ",(0,i.jsx)(e.code,{children:"env"})," parameters if your function defines them."]}),"\n",(0,i.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(e.h3,{id:"simple-function-tool",children:"Simple Function Tool"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"- name: analyze\n  alias: a\n  long_name: Analyze Data\n  description: Run data analysis\n  type: function\n  function: custom_tools.analysis.analyze_data\n"})}),"\n",(0,i.jsx)(e.p,{children:"With implementation:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# custom_tools/analysis.py\n\ndef analyze_data():\n    """Analyze data and return results."""\n    print("Analyzing data...")\n    \n    # Your analysis logic here\n    results = [\n        "Analysis complete",\n        "Found 3 issues",\n        "Performance: 95%"\n    ]\n    \n    return results\n'})}),"\n",(0,i.jsx)(e.h3,{id:"function-tool-with-parameters",children:"Function Tool with Parameters"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"- name: greet\n  alias: g\n  long_name: Greet\n  description: Greet a person\n  type: function\n  function: custom_tools.greetings.greet\n"})}),"\n",(0,i.jsx)(e.p,{children:"With implementation:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# custom_tools/greetings.py\n\ndef greet(name):\n    """Greet a person by name."""\n    return [f"Hello, {name}!"]\n'})}),"\n",(0,i.jsx)(e.h3,{id:"function-tool-with-cli-context",children:"Function Tool with CLI Context"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"- name: info\n  alias: i\n  long_name: CLI Info\n  description: Show CLI information\n  type: function\n  function: custom_tools.info.show_info\n"})}),"\n",(0,i.jsx)(e.p,{children:"With implementation:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# custom_tools/info.py\n\ndef show_info(cli, tools, envs, env=None):\n    """Show CLI information."""\n    output = [\n        f"CLI Name: {cli.name}",\n        f"CLI Command: {cli.command}",\n        f"Number of Tools: {len(tools)}",\n        f"Number of Environments: {len(envs)}",\n    ]\n    \n    if env:\n        output.append(f"Current Environment: {env.name}")\n    \n    return output\n'})}),"\n",(0,i.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Keep Functions Simple"}),": Functions should have a single, clear responsibility"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Handle Errors"}),": Handle errors gracefully to provide a good user experience"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Return Values"}),": Return a list of strings for consistent output formatting"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Documentation"}),": Add docstrings to your functions to document their purpose and usage"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Testing"}),": Write tests for your functions to ensure they work correctly"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var o=t(6540);const i={},s=o.createContext(i);function a(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);