"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5106],{2677:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides/environments","title":"Environments","description":"Hexagon supports multiple environments, allowing you to configure different settings for different contexts (development, staging, production, etc.). This guide explains how to configure and use environments in your CLI.","source":"@site/docs/guides/environments.md","sourceDirName":"guides","slug":"/guides/environments","permalink":"/hexagon/docs/guides/environments","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/environments.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Tool Types","permalink":"/hexagon/docs/guides/tool-types"},"next":{"title":"Theming","permalink":"/hexagon/docs/guides/theming"}}');var o=i(4848),s=i(8453);const r={sidebar_position:3},l="Environments",d={},c=[{value:"Defining Environments",id:"defining-environments",level:2},{value:"Environment Properties",id:"environment-properties",level:3},{value:"Environment-Specific Tool Configuration",id:"environment-specific-tool-configuration",level:2},{value:"Web Tool Example",id:"web-tool-example",level:3},{value:"Shell Tool Example",id:"shell-tool-example",level:3},{value:"Using Environments",id:"using-environments",level:2},{value:"Default Environment",id:"default-environment",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"environments",children:"Environments"})}),"\n",(0,o.jsx)(n.p,{children:"Hexagon supports multiple environments, allowing you to configure different settings for different contexts (development, staging, production, etc.). This guide explains how to configure and use environments in your CLI."}),"\n",(0,o.jsx)(n.h2,{id:"defining-environments",children:"Defining Environments"}),"\n",(0,o.jsxs)(n.p,{children:["Environments are defined in the ",(0,o.jsx)(n.code,{children:"envs"})," section of your configuration file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"envs:\n  - name: development\n    alias: dev\n    long_name: Development Environment\n    description: Used for local development\n  - name: staging\n    alias: stg\n    long_name: Staging Environment\n    description: Used for testing before production\n  - name: production\n    alias: prod\n    long_name: Production Environment\n    description: Live production environment\n"})}),"\n",(0,o.jsx)(n.h3,{id:"environment-properties",children:"Environment Properties"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Property"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Required"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"name"})}),(0,o.jsx)(n.td,{children:"The name of the environment"}),(0,o.jsx)(n.td,{children:"Yes"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"alias"})}),(0,o.jsx)(n.td,{children:"Short alias for the environment"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"long_name"})}),(0,o.jsx)(n.td,{children:"Longer descriptive name"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"description"})}),(0,o.jsx)(n.td,{children:"Detailed description"}),(0,o.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"environment-specific-tool-configuration",children:"Environment-Specific Tool Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Many tools need different configurations for different environments. You can specify environment-specific settings using the ",(0,o.jsx)(n.code,{children:"envs"})," property in a tool configuration:"]}),"\n",(0,o.jsx)(n.h3,{id:"web-tool-example",children:"Web Tool Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"- name: docs\n  alias: d\n  long_name: Documentation\n  description: Open team documentation\n  type: web\n  envs:\n    development: https://docs-dev.example.com\n    staging: https://docs-staging.example.com\n    production: https://docs.example.com\n  action: open_link\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In this example, the ",(0,o.jsx)(n.code,{children:"docs"})," tool will open different URLs depending on the selected environment."]}),"\n",(0,o.jsx)(n.h3,{id:"shell-tool-example",children:"Shell Tool Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"- name: deploy\n  alias: dep\n  long_name: Deploy Service\n  type: shell\n  envs:\n    development: \"echo 'Deploying to development...' && ./scripts/deploy-dev.sh\"\n    staging: \"echo 'Deploying to staging...' && ./scripts/deploy-staging.sh\"\n    production: \"echo 'Deploying to production...' && ./scripts/deploy-prod.sh\"\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In this example, the ",(0,o.jsx)(n.code,{children:"deploy"})," tool will run different shell commands depending on the selected environment."]}),"\n",(0,o.jsx)(n.h2,{id:"using-environments",children:"Using Environments"}),"\n",(0,o.jsxs)(n.p,{children:["When running your CLI, you can specify an environment using the ",(0,o.jsx)(n.code,{children:"-e"})," or ",(0,o.jsx)(n.code,{children:"--env"})," flag:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mycli tool-name -e development\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or using the environment alias:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mycli tool-name -e dev\n"})}),"\n",(0,o.jsx)(n.p,{children:"If no environment is specified, Hexagon will prompt you to select one if the tool has environment-specific configurations."}),"\n",(0,o.jsx)(n.h2,{id:"default-environment",children:"Default Environment"}),"\n",(0,o.jsxs)(n.p,{children:["You can set a default environment by setting the ",(0,o.jsx)(n.code,{children:"HEXAGON_DEFAULT_ENV"})," environment variable:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export HEXAGON_DEFAULT_ENV=development\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will make Hexagon use the specified environment by default when no environment is explicitly provided."}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Consistent Naming"}),": Use consistent naming conventions for environments"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clear Aliases"}),": Use short, intuitive aliases for frequently used environments"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Complete Configuration"}),": Ensure all tools have configurations for all relevant environments"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Environment Variables"}),": Use environment variables for sensitive information"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Documentation"}),": Document the purpose and usage of each environment"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.p,{children:["Learn how to customize the appearance of your CLI with ",(0,o.jsx)(n.a,{href:"theming",children:"Theming"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);