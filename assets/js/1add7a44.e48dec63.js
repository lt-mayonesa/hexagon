"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4617],{3218:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"guides/theming","title":"Theming","description":"Hexagon supports customizing the appearance of your CLI through themes. This guide explains how to configure and use themes in your CLI.","source":"@site/docs/guides/theming.md","sourceDirName":"guides","slug":"/guides/theming","permalink":"/hexagon/docs/guides/theming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/theming.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Environments","permalink":"/hexagon/docs/guides/environments"},"next":{"title":"Plugins","permalink":"/hexagon/docs/guides/plugins"}}');var i=t(4848),l=t(8453);const r={sidebar_position:4},o="Theming",h={},a=[{value:"Available Themes",id:"available-themes",level:2},{value:"Setting the Theme",id:"setting-the-theme",level:2},{value:"Examples",id:"examples",level:3},{value:"Default Theme",id:"default-theme",level:4},{value:"Disabled Theme",id:"disabled-theme",level:4},{value:"Result Only Theme",id:"result-only-theme",level:4},{value:"Theme Configuration in CLI Options",id:"theme-configuration-in-cli-options",level:2},{value:"Custom Themes",id:"custom-themes",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"theming",children:"Theming"})}),"\n",(0,i.jsx)(n.p,{children:"Hexagon supports customizing the appearance of your CLI through themes. This guide explains how to configure and use themes in your CLI."}),"\n",(0,i.jsx)(n.h2,{id:"available-themes",children:"Available Themes"}),"\n",(0,i.jsx)(n.p,{children:"Hexagon currently supports three built-in themes:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"default"}),": A colorful theme with decorations that provides a rich CLI experience"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"disabled"}),": A minimal theme with no colors or decorations, useful for environments where ANSI colors aren't supported"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"result_only"}),": A theme that only shows the result logs, useful for scripts and automation"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"setting-the-theme",children:"Setting the Theme"}),"\n",(0,i.jsxs)(n.p,{children:["You can set the theme using the ",(0,i.jsx)(n.code,{children:"HEXAGON_THEME"})," environment variable:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"HEXAGON_THEME=default mycli\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h4,{id:"default-theme",children:"Default Theme"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"HEXAGON_THEME=default mycli\n"})}),"\n",(0,i.jsx)(n.p,{children:"This provides a colorful interface with decorations and clear visual hierarchy."}),"\n",(0,i.jsx)(n.h4,{id:"disabled-theme",children:"Disabled Theme"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"HEXAGON_THEME=disabled mycli\n"})}),"\n",(0,i.jsx)(n.p,{children:"This disables all colors and decorations, providing a plain text interface that works in all terminal environments."}),"\n",(0,i.jsx)(n.h4,{id:"result-only-theme",children:"Result Only Theme"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"HEXAGON_THEME=result_only mycli\n"})}),"\n",(0,i.jsx)(n.p,{children:"This theme only shows the result logs, which is useful when you want to use the output in scripts or other automation."}),"\n",(0,i.jsx)(n.h2,{id:"theme-configuration-in-cli-options",children:"Theme Configuration in CLI Options"}),"\n",(0,i.jsx)(n.p,{children:"You can also configure the default theme for your CLI in the configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"cli:\n  name: My CLI\n  command: mycli\n  options:\n    theme: default\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This sets the default theme for your CLI, but users can still override it using the ",(0,i.jsx)(n.code,{children:"HEXAGON_THEME"})," environment variable."]}),"\n",(0,i.jsx)(n.h2,{id:"custom-themes",children:"Custom Themes"}),"\n",(0,i.jsx)(n.p,{children:"Currently, Hexagon doesn't support creating custom themes directly through the configuration file. However, you can extend the theming system by creating a plugin if you need more customization options."}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default Theme"}),": Use the default theme for interactive use"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Disabled Theme"}),": Use the disabled theme in environments where ANSI colors aren't supported"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Result Only Theme"}),": Use the result_only theme when integrating with scripts or automation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": Document the available themes and how to set them in your CLI's documentation"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.p,{children:["Learn how to extend your CLI's functionality with ",(0,i.jsx)(n.a,{href:"plugins",children:"Plugins"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);