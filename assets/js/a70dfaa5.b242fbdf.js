"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9550],{7542:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/support/hooks","title":"Hooks API","description":"Hexagon provides a hooks system that allows you to execute code at specific points in the CLI lifecycle. This page documents the hooks API and how to use it in your custom tools and plugins.","source":"@site/docs/api/support/hooks.md","sourceDirName":"api/support","slug":"/api/support/hooks","permalink":"/hexagon/docs/api/support/hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/support/hooks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"apiSidebar","previous":{"title":"Output API","permalink":"/hexagon/docs/api/support/output"},"next":{"title":"Storage API","permalink":"/hexagon/docs/api/support/storage"}}');var s=o(4848),i=o(8453);const r={sidebar_position:2},a="Hooks API",l={},d=[{value:"HexagonHooks Class",id:"hexagonhooks-class",level:2},{value:"Available Hooks",id:"available-hooks",level:2},{value:"Registering Hook Functions",id:"registering-hook-functions",level:2},{value:"Hook Function Parameters",id:"hook-function-parameters",level:2},{value:"Hook Registration in Plugins",id:"hook-registration-in-plugins",level:2},{value:"Examples",id:"examples",level:2},{value:"Logging Hook",id:"logging-hook",level:3},{value:"Authentication Hook",id:"authentication-hook",level:3},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"hooks-api",children:"Hooks API"})}),"\n",(0,s.jsx)(n.p,{children:"Hexagon provides a hooks system that allows you to execute code at specific points in the CLI lifecycle. This page documents the hooks API and how to use it in your custom tools and plugins."}),"\n",(0,s.jsx)(n.h2,{id:"hexagonhooks-class",children:"HexagonHooks Class"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"HexagonHooks"})," class is defined in ",(0,s.jsx)(n.code,{children:"hexagon/support/hooks.py"})," and provides access to the available hooks:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from hexagon.support.hooks import HexagonHooks\n\n# Register a function with the start hook\nHexagonHooks.start.register(my_start_function)\n\n# Register a function with the end hook\nHexagonHooks.end.register(my_end_function)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,s.jsx)(n.p,{children:"Hexagon provides several built-in hooks:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Hook"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"When It's Called"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"start"})}),(0,s.jsx)(n.td,{children:"Called when Hexagon starts"}),(0,s.jsx)(n.td,{children:"After initialization, before tool execution"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tool_selected"})}),(0,s.jsx)(n.td,{children:"Called when a tool is selected"}),(0,s.jsx)(n.td,{children:"After tool selection, before environment selection"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"env_selected"})}),(0,s.jsx)(n.td,{children:"Called when an environment is selected"}),(0,s.jsx)(n.td,{children:"After environment selection, before tool execution"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"before_tool_executed"})}),(0,s.jsx)(n.td,{children:"Called before a tool is executed"}),(0,s.jsx)(n.td,{children:"After environment selection, before tool execution"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tool_executed"})}),(0,s.jsx)(n.td,{children:"Called after a tool is executed"}),(0,s.jsx)(n.td,{children:"After tool execution, before exit"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"end"})}),(0,s.jsx)(n.td,{children:"Called when Hexagon ends"}),(0,s.jsx)(n.td,{children:"After tool execution, before exit"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"registering-hook-functions",children:"Registering Hook Functions"}),"\n",(0,s.jsxs)(n.p,{children:["To register a function with a hook, use the ",(0,s.jsx)(n.code,{children:"register"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from hexagon.support.hooks import HexagonHooks\n\ndef my_start_function():\n    print("Hexagon is starting...")\n\n# Register the function with the start hook\nHexagonHooks.start.register(my_start_function)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"hook-function-parameters",children:"Hook Function Parameters"}),"\n",(0,s.jsx)(n.p,{children:"Hook functions can accept parameters that Hexagon will provide:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def my_start_function(cli, tools, envs):\n    print(f"Starting CLI: {cli.name}")\n    print(f"Number of tools: {len(tools)}")\n    print(f"Number of environments: {len(envs)}")\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The available parameters depend on the hook. The ",(0,s.jsx)(n.code,{children:"start"})," and ",(0,s.jsx)(n.code,{children:"end"})," hooks provide ",(0,s.jsx)(n.code,{children:"cli"}),", ",(0,s.jsx)(n.code,{children:"tools"}),", and ",(0,s.jsx)(n.code,{children:"envs"})," parameters."]}),"\n",(0,s.jsx)(n.h2,{id:"hook-registration-in-plugins",children:"Hook Registration in Plugins"}),"\n",(0,s.jsxs)(n.p,{children:["Hooks are typically registered in a plugin's ",(0,s.jsx)(n.code,{children:"setup"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# my_plugin.py\nfrom hexagon.support.hooks import HexagonHooks\n\ndef setup(cli, tools, envs):\n    HexagonHooks.start.register(my_start_function)\n    HexagonHooks.end.register(my_end_function)\n\ndef my_start_function():\n    print("Hexagon is starting...")\n\ndef my_end_function():\n    print("Hexagon is ending...")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"logging-hook",children:"Logging Hook"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# logging_plugin.py\nimport logging\nimport time\nfrom hexagon.support.hooks import HexagonHooks\n\ndef setup(cli, tools, envs):\n    # Configure logging\n    logging.basicConfig(filename="hexagon.log", level=logging.INFO)\n    \n    # Register hooks\n    HexagonHooks.start.register(log_start)\n    HexagonHooks.end.register(log_end)\n\ndef log_start():\n    global start_time\n    start_time = time.time()\n    logging.info(f"Hexagon started at {time.strftime(\'%Y-%m-%d %H:%M:%S\')}")\n\ndef log_end():\n    end_time = time.time()\n    duration = end_time - start_time\n    logging.info(f"Hexagon ended at {time.strftime(\'%Y-%m-%d %H:%M:%S\')}")\n    logging.info(f"Duration: {duration:.2f} seconds")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"authentication-hook",children:"Authentication Hook"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# auth_plugin.py\nfrom hexagon.support.hooks import HexagonHooks\nfrom hexagon.domain.hexagon_error import HexagonError\n\ndef setup(cli, tools, envs):\n    HexagonHooks.start.register(check_auth)\n\ndef check_auth():\n    # Check if the user is authenticated\n    if not is_authenticated():\n        # Prompt for authentication\n        if not authenticate():\n            # If authentication fails, raise an error to stop execution\n            raise HexagonError("Authentication failed")\n\ndef is_authenticated():\n    # Check if the user is authenticated\n    # This is just an example, implement your own authentication logic\n    return False\n\ndef authenticate():\n    # Implement your authentication logic\n    print("Please enter your credentials:")\n    username = input("Username: ")\n    password = input("Password: ")\n    \n    # Validate credentials\n    # This is just an example, implement your own validation logic\n    return username == "admin" and password == "password"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Keep Hook Functions Simple"}),": Hook functions should be small and focused"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Handle Errors"}),": Handle errors in hook functions to avoid breaking the CLI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Document Your Hooks"}),": Document what your hook functions do and when they're called"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Appropriate Hooks"}),": Choose the right hook for your use case"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Be Mindful of Performance"}),": Hook functions can impact CLI performance, so keep them efficient"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);