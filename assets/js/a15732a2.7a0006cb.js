"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8463],{8375:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"advanced/hooks","title":"Hooks","description":"Hexagon provides a hooks system that allows you to execute code at specific points in the CLI lifecycle. This guide explains how to use hooks to extend your CLI\'s functionality.","source":"@site/docs/advanced/hooks.md","sourceDirName":"advanced","slug":"/advanced/hooks","permalink":"/hexagon/docs/advanced/hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/hooks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Custom Tools","permalink":"/hexagon/docs/advanced/custom-tools"},"next":{"title":"Internationalization","permalink":"/hexagon/docs/advanced/internationalization"}}');var i=o(4848),s=o(8453);const a={sidebar_position:2},r="Hooks",l={},d=[{value:"Understanding Hooks",id:"understanding-hooks",level:2},{value:"Available Hooks",id:"available-hooks",level:2},{value:"Using Hooks",id:"using-hooks",level:2},{value:"Hook Registration in Plugins",id:"hook-registration-in-plugins",level:2},{value:"Hook Execution Order",id:"hook-execution-order",level:2},{value:"Hook Function Parameters",id:"hook-function-parameters",level:2},{value:"Example: Logging Hook",id:"example-logging-hook",level:2},{value:"Example: Authentication Hook",id:"example-authentication-hook",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"hooks",children:"Hooks"})}),"\n",(0,i.jsx)(n.p,{children:"Hexagon provides a hooks system that allows you to execute code at specific points in the CLI lifecycle. This guide explains how to use hooks to extend your CLI's functionality."}),"\n",(0,i.jsx)(n.h2,{id:"understanding-hooks",children:"Understanding Hooks"}),"\n",(0,i.jsx)(n.p,{children:"Hooks are points in Hexagon's execution flow where you can register functions to be called. They allow you to add custom behavior without modifying Hexagon's core code."}),"\n",(0,i.jsx)(n.h2,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,i.jsx)(n.p,{children:"Hexagon provides several built-in hooks:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Hook"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"When It's Called"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsx)(n.td,{children:"Called when Hexagon starts"}),(0,i.jsx)(n.td,{children:"After initialization, before tool execution"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsx)(n.td,{children:"Called when Hexagon ends"}),(0,i.jsx)(n.td,{children:"After tool execution, before exit"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"using-hooks",children:"Using Hooks"}),"\n",(0,i.jsx)(n.p,{children:"You can register functions with hooks in your custom tools or plugins:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from hexagon.support.hooks import HexagonHooks\n\n# Register a function with the start hook\nHexagonHooks.start.register(my_start_function)\n\n# Register a function with the end hook\nHexagonHooks.end.register(my_end_function)\n\ndef my_start_function():\n    print("Hexagon is starting...")\n\ndef my_end_function():\n    print("Hexagon is ending...")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"hook-registration-in-plugins",children:"Hook Registration in Plugins"}),"\n",(0,i.jsxs)(n.p,{children:["Hooks are typically registered in a plugin's ",(0,i.jsx)(n.code,{children:"setup"})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# my_plugin.py\nfrom hexagon.support.hooks import HexagonHooks\n\ndef setup(cli, tools, envs):\n    HexagonHooks.start.register(my_start_function)\n    HexagonHooks.end.register(my_end_function)\n\ndef my_start_function():\n    print("Hexagon is starting...")\n\ndef my_end_function():\n    print("Hexagon is ending...")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"hook-execution-order",children:"Hook Execution Order"}),"\n",(0,i.jsx)(n.p,{children:"Functions registered with a hook are called in the order they were registered. If multiple plugins register functions with the same hook, the order depends on the order in which the plugins are loaded."}),"\n",(0,i.jsx)(n.h2,{id:"hook-function-parameters",children:"Hook Function Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Hook functions can accept parameters that Hexagon will provide:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def my_start_function(cli, tools, envs):\n    print(f"Starting CLI: {cli.name}")\n    print(f"Number of tools: {len(tools)}")\n    print(f"Number of environments: {len(envs)}")\n'})}),"\n",(0,i.jsx)(n.p,{children:"The available parameters depend on the hook. Check the Hexagon documentation for details on each hook's parameters."}),"\n",(0,i.jsx)(n.h2,{id:"example-logging-hook",children:"Example: Logging Hook"}),"\n",(0,i.jsx)(n.p,{children:"Here's an example of using hooks to add logging to your CLI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# logging_plugin.py\nimport logging\nimport time\nfrom hexagon.support.hooks import HexagonHooks\n\ndef setup(cli, tools, envs):\n    # Configure logging\n    logging.basicConfig(filename="hexagon.log", level=logging.INFO)\n    \n    # Register hooks\n    HexagonHooks.start.register(log_start)\n    HexagonHooks.end.register(log_end)\n\ndef log_start():\n    global start_time\n    start_time = time.time()\n    logging.info(f"Hexagon started at {time.strftime(\'%Y-%m-%d %H:%M:%S\')}")\n\ndef log_end():\n    end_time = time.time()\n    duration = end_time - start_time\n    logging.info(f"Hexagon ended at {time.strftime(\'%Y-%m-%d %H:%M:%S\')}")\n    logging.info(f"Duration: {duration:.2f} seconds")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-authentication-hook",children:"Example: Authentication Hook"}),"\n",(0,i.jsx)(n.p,{children:"Here's an example of using hooks to add authentication to your CLI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# auth_plugin.py\nfrom hexagon.support.hooks import HexagonHooks\nfrom hexagon.domain.hexagon_error import HexagonError\n\ndef setup(cli, tools, envs):\n    HexagonHooks.start.register(check_auth)\n\ndef check_auth():\n    # Check if the user is authenticated\n    if not is_authenticated():\n        # Prompt for authentication\n        if not authenticate():\n            # If authentication fails, raise an error to stop execution\n            raise HexagonError("Authentication failed")\n\ndef is_authenticated():\n    # Check if the user is authenticated\n    # This is just an example, implement your own authentication logic\n    return False\n\ndef authenticate():\n    # Implement your authentication logic\n    print("Please enter your credentials:")\n    username = input("Username: ")\n    password = input("Password: ")\n    \n    # Validate credentials\n    # This is just an example, implement your own validation logic\n    return username == "admin" and password == "password"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keep Hook Functions Simple"}),": Hook functions should be small and focused"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle Errors"}),": Handle errors in hook functions to avoid breaking the CLI"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Document Your Hooks"}),": Document what your hook functions do and when they're called"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Appropriate Hooks"}),": Choose the right hook for your use case"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Be Mindful of Performance"}),": Hook functions can impact CLI performance, so keep them efficient"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.p,{children:["Learn about ",(0,i.jsx)(n.a,{href:"internationalization",children:"Internationalization"})," to make your CLI accessible to users in different languages."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>r});var t=o(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);