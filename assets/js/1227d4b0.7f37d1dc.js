"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2821],{7440:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"guides/tool-types","title":"Tool Types","description":"Hexagon supports several tool types, each designed for specific use cases. This guide explains each tool type and how to configure them.","source":"@site/docs/guides/tool-types.md","sourceDirName":"guides","slug":"/guides/tool-types","permalink":"/hexagon/docs/guides/tool-types","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/tool-types.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Creating a CLI","permalink":"/hexagon/docs/guides/creating-a-cli"},"next":{"title":"Environments","permalink":"/hexagon/docs/guides/environments"}}');var i=s(4848),t=s(8453);const l={sidebar_position:2},r="Tool Types",a={},c=[{value:"Web Tools",id:"web-tools",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Key Properties",id:"key-properties",level:3},{value:"Shell Tools",id:"shell-tools",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"Multi-line Commands",id:"multi-line-commands",level:3},{value:"Key Properties",id:"key-properties-1",level:3},{value:"Function Tools",id:"function-tools",level:2},{value:"Configuration",id:"configuration-2",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Key Properties",id:"key-properties-2",level:3},{value:"Group Tools",id:"group-tools",level:2},{value:"Configuration",id:"configuration-3",level:3},{value:"Key Properties",id:"key-properties-3",level:3},{value:"Separator",id:"separator",level:2},{value:"Configuration",id:"configuration-4",level:3},{value:"Key Properties",id:"key-properties-4",level:3},{value:"Hexagon Tools",id:"hexagon-tools",level:2},{value:"Configuration",id:"configuration-5",level:3},{value:"Key Properties",id:"key-properties-5",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"tool-types",children:"Tool Types"})}),"\n",(0,i.jsx)(n.p,{children:"Hexagon supports several tool types, each designed for specific use cases. This guide explains each tool type and how to configure them."}),"\n",(0,i.jsx)(n.h2,{id:"web-tools",children:"Web Tools"}),"\n",(0,i.jsx)(n.p,{children:"Web tools open URLs in your default browser. They're useful for accessing web applications, documentation, or any web resource."}),"\n",(0,i.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: docs\n  alias: d\n  long_name: Documentation\n  description: Open team documentation\n  type: web\n  envs:\n    dev: https://docs-dev.example.com\n    prod: https://docs.example.com\n  action: open_link\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-properties",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Must be set to ",(0,i.jsx)(n.code,{children:"web"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"action"}),": Must be set to ",(0,i.jsx)(n.code,{children:"open_link"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"envs"}),": Optional mapping of environment names to URLs"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"shell-tools",children:"Shell Tools"}),"\n",(0,i.jsx)(n.p,{children:"Shell tools execute shell commands. They're useful for running scripts, commands, or any CLI operation."}),"\n",(0,i.jsx)(n.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: deploy\n  alias: dep\n  long_name: Deploy Service\n  description: Deploy the service\n  type: shell\n  action: ./scripts/deploy.sh\n"})}),"\n",(0,i.jsx)(n.h3,{id:"multi-line-commands",children:"Multi-line Commands"}),"\n",(0,i.jsx)(n.p,{children:"For more complex commands, you can use a list of strings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'- name: setup\n  alias: s\n  long_name: Setup Project\n  description: Set up the project\n  type: shell\n  action:\n    - "echo \'Setting up project...\'" \n    - "npm install"\n    - "npm run build"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"key-properties-1",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Must be set to ",(0,i.jsx)(n.code,{children:"shell"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"action"}),": The shell command(s) to execute"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"function-tools",children:"Function Tools"}),"\n",(0,i.jsx)(n.p,{children:"Function tools call Python functions. They're useful for implementing custom logic that can't be easily expressed as a shell command."}),"\n",(0,i.jsx)(n.h3,{id:"configuration-2",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: analyze\n  alias: a\n  long_name: Analyze Data\n  description: Run data analysis\n  type: function\n  function: custom_tools.analysis.analyze_data\n"})}),"\n",(0,i.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsxs)(n.p,{children:["Create a Python file in your ",(0,i.jsx)(n.code,{children:"custom_tools_dir"})," with the function implementation:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# custom_tools/analysis.py\n\ndef analyze_data():\n    print("Analyzing data...")\n    # Your analysis logic here\n    return ["Analysis complete", "Found 3 issues"]  # Return list of strings for output\n'})}),"\n",(0,i.jsx)(n.h3,{id:"key-properties-2",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Must be set to ",(0,i.jsx)(n.code,{children:"function"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"function"}),": The fully qualified function name"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"group-tools",children:"Group Tools"}),"\n",(0,i.jsx)(n.p,{children:"Group tools organize related tools together. They're useful for creating a hierarchical structure in your CLI."}),"\n",(0,i.jsx)(n.h3,{id:"configuration-3",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: infra\n  alias: i\n  long_name: Infrastructure\n  description: Infrastructure tools\n  type: group\n  tools:\n    - name: provision\n      alias: p\n      long_name: Provision Resources\n      type: shell\n      action: ./scripts/provision.sh\n    - name: teardown\n      alias: t\n      long_name: Teardown Resources\n      type: shell\n      action: ./scripts/teardown.sh\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-properties-3",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Must be set to ",(0,i.jsx)(n.code,{children:"group"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tools"}),": List of tools in the group"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"separator",children:"Separator"}),"\n",(0,i.jsx)(n.p,{children:"Separators add visual separation between tools in the CLI menu. They're useful for organizing tools into logical sections."}),"\n",(0,i.jsx)(n.h3,{id:"configuration-4",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: __separator\n  type: separator\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-properties-4",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Must be set to ",(0,i.jsx)(n.code,{children:"separator"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Conventionally set to ",(0,i.jsx)(n.code,{children:"__separator"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"hexagon-tools",children:"Hexagon Tools"}),"\n",(0,i.jsx)(n.p,{children:"Hexagon tools are built-in tools provided by Hexagon itself. They're used for managing Hexagon and your custom CLIs."}),"\n",(0,i.jsx)(n.h3,{id:"configuration-5",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"These are typically not configured directly by users but are provided by Hexagon."}),"\n",(0,i.jsx)(n.h3,{id:"key-properties-5",children:"Key Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Set to ",(0,i.jsx)(n.code,{children:"hexagon"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Choose the Right Type"}),": Select the tool type that best fits your use case"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Naming"}),": Use consistent naming conventions for tools and aliases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clear Descriptions"}),": Provide clear descriptions for each tool"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Organize with Groups"}),": Use groups to organize related tools"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Separators"}),": Add separators to visually separate different sections of your CLI"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.p,{children:["Learn how to configure ",(0,i.jsx)(n.a,{href:"environments",children:"Environments"})," for your CLI."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var o=s(6540);const i={},t=o.createContext(i);function l(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);