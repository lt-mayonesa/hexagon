# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-02-18 15:33+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"

#: hexagon/__main__.py:40
msgid "msg.main.first_time_intro"
msgstr "This looks like your first time running hexagon."

#: hexagon/__main__.py:40
msgid "msg.main.first_time_tool"
msgstr "You should probably run \"Install CLI\"."

#: hexagon/actions/external/open_link.py:8
msgid "msg.actions.external.open_link.result"
msgstr "Opening URL: {url}"

#: hexagon/actions/internal/create_new_tool.py:15
msgid "action.actions.internal.create_new_tool.choose_action"
msgstr "Choose the action of your tool:"

#: hexagon/actions/internal/create_new_tool.py:18
msgid "action.actions.internal.create_new_tool.choose_type"
msgstr "What type of tool is it?"

#: hexagon/actions/internal/create_new_tool.py:21
msgid "action.actions.internal.create_new_tool.input_name"
msgstr "What command would you like to give your tool?"

#: hexagon/actions/internal/create_new_tool.py:24
msgid "action.actions.internal.create_new_tool.input_alias"
msgstr "Would you like to add an alias/shortcut? (empty for none)"

#: hexagon/actions/internal/create_new_tool.py:28
msgid "action.actions.internal.create_new_tool.input_long_name"
msgstr ""
"Would you like to add a long name? (this will be displayed instead of "
"command)"

#: hexagon/actions/internal/create_new_tool.py:32
msgid "action.actions.internal.create_new_tool.input_description"
msgstr ""
"Would you like to add a description? (this will be displayed along side "
"command/long_name)"

#: hexagon/actions/internal/create_new_tool.py:37
msgid "action.actions.internal.create_new_tool.input_custom_tools_path"
msgstr ""
"Where would you like it to be? (can be absolute path or relative to YAML. "
"ie: ./tools or .)"

#: hexagon/actions/internal/create_new_tool.py:56
msgid "action.actions.internal.create_new_tool.input_action"
msgstr "What name would you like to give your new action?"

#: hexagon/actions/internal/create_new_tool.py:86
msgid "msg.actions.internal.create_new_tool.custom_tools_dir_not_set"
msgstr "[magenta]Your CLI does not have a custom tools dir.[/magenta]"

#: hexagon/actions/internal/create_new_tool.py:93
msgid "msg.actions.internal.create_new_tool.input_custom_tools_path_comment"
msgstr "relative to this file"

#: hexagon/actions/internal/install_cli.py:20
msgid "action.actions.internal.install_cli.config_file_location"
msgstr "Where is your CLI's hexagon config YAML? (app.yml/yaml)"

#: hexagon/actions/internal/install_cli.py:24
msgid "action.actions.internal.install_cli.commands_path"
msgstr ""
"Where do you want your CLI commands to be saved? This should be on your path"

#: hexagon/actions/internal/install_cli.py:35
msgid "error.actions.internal.install_cli.select_valid_file"
msgstr "Please select a valid YAML file"

#: hexagon/actions/internal/install_cli.py:62
msgid "msg.actions.internal.install_cli.success"
msgstr ""
"[green]✓ [white][u]All done! Now you can execute your project's CLI like:"

#: hexagon/actions/internal/install_cli.py:72
msgid "msg.actions.internal.install_cli.not_in_path"
msgstr "[yellow]⚠ {dir} is not in your $PATH[/yellow]"

#: hexagon/actions/internal/save_new_alias.py:16
msgid "action.actions.internal.save_new_alias.prompt_alias_name"
msgstr "Alias name?"

#: hexagon/actions/internal/save_new_alias.py:23
msgid "error.actions.internal.save_new_alias.insert_valid_alias"
msgstr "Please insert a valid unix alias."

#: hexagon/actions/internal/save_new_alias.py:32
msgid "msg.actions.internal.save_new_alias.last_command"
msgstr "Last command: {last_command}"

#: hexagon/actions/internal/save_new_alias.py:68
msgid "msg.actions.internal.save_new_alias.success"
msgstr "[green]✓[/green] [u]All done! You can now run your alias like:[/u]"

#: hexagon/actions/internal/save_new_alias.py:73
msgid "msg.actions.internal.save_new_alias.execute_tip"
msgstr "[dim][u]Tip:[/dim][/u]"

#: hexagon/actions/internal/save_new_alias.py:76
msgid "msg.actions.internal.save_new_alias.reload_builtins"
msgstr "[dim]You probably need to reload your shell built-ins.[/dim]"

#: hexagon/actions/internal/save_new_alias.py:78
msgid "msg.actions.internal.save_new_alias.run_source"
msgstr ""
"[dim]Either by running 'source {file_path}' or restarting your terminal.[/"
"dim]"

#: hexagon/actions/internal/save_new_alias.py:86
msgid "msg.actions.internal.save_new_alias.added_to_file"
msgstr "Added alias to {file}"

#: hexagon/runtime/configuration.py:30
msgid "error.domain.configuration.group_tool_file_not_found"
msgstr "File {config_file_path} could not be found"

#: hexagon/runtime/configuration.py:118
msgid "msg.domain.configuration.install_cli_long_name"
msgstr "Install CLI"

#: hexagon/runtime/configuration.py:119
msgid "msg.domain.configuration.install_cli_description"
msgstr "Install a custom project CLI from a YAML file."

#: hexagon/runtime/configuration.py:125
msgid "msg.domain.configuration.get_json_schema_long_name"
msgstr "Get JSON Schema"

#: hexagon/runtime/configuration.py:127
msgid "msg.domain.configuration.get_json_schema_description"
msgstr "Generate JSON Schema for hexagon config file (app.yml). Which can be imported in your IDE, or used for validation."

#: hexagon/runtime/configuration.py:145
msgid "msg.domain.configuration.save_alias_long_name"
msgstr "Save Last Command as Shell Alias"

#: hexagon/runtime/configuration.py:151
msgid "msg.domain.configuration.create_tool_long_name"
msgstr "Create A New Tool"

#: hexagon/runtime/dependencies/node.py:21
#: hexagon/runtime/dependencies/python.py:16
msgid "msg.support.dependencies.installing_dependencies"
msgstr "Installing {runtime} dependencies at path: {path}"

#: hexagon/runtime/execute/action.py:139
msgid "msg.support.execute.action.tool_help_epilog"
msgstr ""
"To support tool arguments either add a model extending\n"
"hexagon.domain.args.ToolArgs class to your script,\n"
"or a args property in the tool YAML definition."

#: hexagon/runtime/execute/errors.py:19
msgid "error.support.execute.errors.command_result_code"
msgstr "{executed_command} returned code: {return_code}"

#: hexagon/runtime/execute/errors.py:26
msgid "error.support.execute.errors.could_not_execute"
msgstr "Hexagon couldn't execute the action: [bold]{action}[/bold]"

#: hexagon/runtime/execute/errors.py:30
msgid "error.support.execute.errors.we_tried"
msgstr "We tried:"

#: hexagon/runtime/execute/errors.py:32
msgid "error.support.execute.errors.attempt_cli_custom_dir"
msgstr "  - Your CLI's custom_tools_dir: [bold]{path}[/bold]"

#: hexagon/runtime/execute/errors.py:37
msgid "error.support.execute.errors.attempt_internal_tools"
msgstr "  - Hexagon repository of external actions ({package})"

#: hexagon/runtime/execute/errors.py:42
msgid "error.support.execute.errors.attempt_known_script"
msgstr "  - A known script file ({extensions})"

#: hexagon/runtime/execute/errors.py:46
msgid "error.support.execute.errors.attempt_inline_command"
msgstr "Running your action as a shell command directly"

#: hexagon/runtime/execute/errors.py:53
msgid "error.support.execute.errors.invalid_input"
msgstr "There where {count} error(s) in your input for tool {tool}"

#: hexagon/runtime/execute/errors.py:60
msgid "error.support.execute.errors.invalid_argument"
msgstr "✗ [bold]{loc}[/bold] -> {message}"

#: hexagon/runtime/execute/errors.py:132
msgid "error.support.execute.errors.python_dependency_error"
msgstr "Your custom action seems to have a module dependency error"

#: hexagon/runtime/execute/errors.py:138
msgid "error.support.execute.errors.execute_tool_failed"
msgstr "Execution of tool {action} failed"

#: hexagon/runtime/execute/tool.py:70
msgid "msg.support.execute.tool.go_back_long_name"
msgstr "Go back"

#: hexagon/runtime/execute/tool.py:72
msgid "msg.support.execute.tool.go_back_description"
msgstr "Go back to the previous menu"

#: hexagon/runtime/execute/tool.py:73
msgid "icon.global.go_back"
msgstr "↩"

#: hexagon/runtime/help.py:21
msgid "msg.support.help.no_install"
msgstr "You are executing Hexagon without an install."

#: hexagon/runtime/help.py:22
msgid "msg.support.help.get_started"
msgstr "To get started run hexagon's \"Install CLI\" tool"

#: hexagon/runtime/help.py:32
msgid "msg.support.help.envs"
msgstr "[bold][u]Envs:[/bold][/u]"

#: hexagon/runtime/help.py:45
msgid "msg.support.help.tools"
msgstr "[bold][u]Tools:[/bold][/u]"

#: hexagon/runtime/update/cli/__init__.py:24
msgid "msg.support.update.cli.checking_for_cli_updates"
msgstr "Checking for new CLI versions"

#: hexagon/runtime/update/cli/__init__.py:30
msgid "msg.support.update.cli.checking_for_cli_updates_on_branch"
msgstr "Checking for new CLI versions, on branch: [cyan]{branch}[/cyan]"

#: hexagon/runtime/update/cli/__init__.py:37
msgid "msg.support.update.cli.new_version_available"
msgstr "New [cyan]{cli_name}[/cyan] version available"

#: hexagon/runtime/update/cli/__init__.py:42
msgid "action.support.update.cli.confirm_update"
msgstr "Would you like to update?"

#: hexagon/runtime/update/cli/__init__.py:49
msgid "msg.support.update.cli.updated"
msgstr "[green]✓[/green] [white]Updated to latest version[/white]"

#: hexagon/runtime/update/cli/git.py:32
msgid "error.support.cli.git.failed_to_get_remote"
msgstr ""
"Couldn't get the remote name from your cli's repository, too many choices "
"and origin is not present"

#: hexagon/runtime/update/hexagon.py:27
msgid "msg.support.update.hexagon.checking_new_versions"
msgstr "Checking for new hexagon versions"

#: hexagon/runtime/update/hexagon.py:37
msgid "msg.support.update.hexagon.new_version_available"
msgstr ""
"New [cyan]hexagon[/cyan] version available [green]{latest_version}[/green]!"

#: hexagon/runtime/update/hexagon.py:43
msgid "msg.support.update.hexagon.fetching_changelog"
msgstr "Fetching changelog"

#: hexagon/runtime/update/hexagon.py:54
msgid "msg.support.update.hexagon.and_much_more"
msgstr "and much more!"

#: hexagon/runtime/update/hexagon.py:57
msgid "action.support.update.hexagon.confirm_update"
msgstr "Would you like to update?"

#: hexagon/runtime/update/hexagon.py:61
msgid "msg.support.update.hexagon.updating"
msgstr "Updating"

#: hexagon/runtime/update/hexagon.py:68
msgid "msg.support.update.hexagon.updated"
msgstr "Updated to latest version"

#: hexagon/runtime/wax.py:57
msgid "action.support.wax.select_environment"
msgstr "On which environment?"

#: hexagon/runtime/wax.py:62
msgid "error.support.wax.invalid_environment"
msgstr "Please select a valid environment"

#: hexagon/runtime/wax.py:79
msgid "action.support.wax.select_tool"
msgstr "Hi, which tool would you like to use today?"

#: hexagon/runtime/wax.py:82
msgid "error.support.wax.invalid_tool"
msgstr "Please select a valid tool"

#: hexagon/runtime/yaml.py:42
msgid "error.support.yaml.invalid_yaml"
msgstr "There were {errors_length} error(s) in your YAML file: {yaml_path}"

#: hexagon/runtime/yaml.py:49
msgid "error.support.yaml.error_at"
msgstr "✗ [u][bold]{loc}[/bold] -> {message}[/u]"

#: hexagon/support/hooks/hook.py:53
msgid "error.support.hooks.hook.unknown_type"
msgstr "Unknown HookSubscriptionType {subscription_type}"

#: hexagon/support/input/prompt/hints.py:28
msgid "msg.support.prompt.hints.confirm"
msgstr "[ {keys} ] to confirm"

#: hexagon/support/input/prompt/hints.py:29
msgid "msg.support.prompt.hints.cancel"
msgstr "[ {keys} ] to cancel"

#: hexagon/support/input/prompt/hints.py:30
msgid "msg.support.prompt.hints.skip"
msgstr "[ {keys} ] to skip"

#: hexagon/support/input/prompt/hints.py:38
msgid "msg.support.prompt.hints.autocomplete"
msgstr "[ {keys} ] to autocomplete (if available)"

#: hexagon/support/input/prompt/hints.py:47
msgid "msg.support.prompt.hints.toggle"
msgstr "[ {keys} ] to toggle"

#: hexagon/support/input/prompt/hints.py:48
msgid "msg.support.prompt.hints.toggle_move_down"
msgstr "[ {keys} ] to toggle and move down"

#: hexagon/support/input/prompt/hints.py:49
msgid "msg.support.prompt.hints.toggle_move_up"
msgstr "[ {keys} ] to toggle and move up"

#: hexagon/support/input/prompt/hints.py:50
msgid "msg.support.prompt.hints.toggle_all"
msgstr "[ {keys} ] to toggle all"

#: hexagon/support/input/prompt/hints.py:52
msgid "msg.support.prompt.hints.toggle_all_true"
msgstr "[ {keys} ] to toggle all to true"

#: hexagon/support/input/prompt/hints.py:61
msgid "msg.support.prompt.hints.move_down"
msgstr "[ {keys} ] to move down"

#: hexagon/support/input/prompt/hints.py:62
msgid "msg.support.prompt.hints.move_up"
msgstr "[ {keys} ] to move up"

#: hexagon/support/input/prompt/hints.py:69
msgid "msg.support.prompt.hints.toggle_fuzzy_search"
msgstr "[ {keys} ] to toggle fuzzy search"

#: hexagon/support/input/prompt/hints.py:79
msgid "msg.support.prompt.hints.number_decrement"
msgstr "[ {keys} ] to decrement"

#: hexagon/support/input/prompt/hints.py:82
msgid "msg.support.prompt.hints.number_increment"
msgstr "[ {keys} ] to increment"

#: hexagon/support/input/prompt/hints.py:83
msgid "msg.support.prompt.hints.number_left"
msgstr "[ {keys} ] to select number left"

#: hexagon/support/input/prompt/hints.py:84
msgid "msg.support.prompt.hints.number_right"
msgstr "[ {keys} ] to select number right"

#: hexagon/support/input/prompt/hints.py:87
msgid "msg.support.prompt.hints.toggle_negative"
msgstr "[ {keys} ] to toggle negative"

#: hexagon/support/input/prompt/hints.py:96
msgid "msg.support.prompt.hints.number_dot"
msgstr "[ {keys} ] to select decimal part"

#: hexagon/support/input/prompt/hints.py:98
msgid "msg.support.prompt.hints.alt_part_focus"
msgstr "[ {keys} ] to alternate focused part"

#: hexagon/support/input/prompt/hints.py:106
msgid "msg.support.prompt.hints.create_path_at_location"
msgstr "[ {keys} ] to create directory at location"

#: hexagon/support/input/prompt/hints.py:123
msgid "error.support.prompt.hints.no_hints_on_builder"
msgstr "HintsBuilder should have at least one hint"

#: hexagon/support/input/prompt/hints.py:126
msgid "msg.support.prompt.hints.help"
msgstr "help:"

#: hexagon/support/input/prompt/prompt.py:30
msgid "error.support.input.prompt.prompt.invalid_argument_setup"
msgstr ""
"Config [b]{property}[/b] is not supported for argument [b]{argument}[/b]"

#: hexagon/support/input/prompt/prompt.py:294
msgid "msg.support.prompt.prompt.directory_created"
msgstr "📁 created directory: {path} [green]✓[/green]"

#: hexagon/support/tracer.py:84
msgid "msg.main.tracer.run_again"
msgstr ""
"[cyan][dim]To run this tool again do:[/dim]\n"
"  {command}[/cyan]"

#: hexagon/support/tracer.py:90
msgid "msg.main.tracer.or"
msgstr ""
"[cyan][dim] or:[/dim]\n"
"  {command}[/cyan]"
