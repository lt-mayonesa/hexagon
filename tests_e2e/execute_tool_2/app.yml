cli:
  name: Test
  command: hexagon-test
  custom_tools_dir: .

envs:
  - name: dev
    alias: d
    long_name: dev
  - name: qa
    alias: q
    long_name: qa

tools:
  - name: generic-command
    action: 'echo "executed generic-command"'
    type: shell
    alias: gc
    long_name: A generic command

  - name: complex-command
    action: 'echo "nested $(echo 1)"'
    type: shell
    alias: cc
    long_name: A complex command

  - name: complex-command-with-dots
    action: 'cat some_file.txt | xargs echo "with . dots"'
    type: shell
    alias: ccd
    long_name: A complex command with dots

  - name: generic-multiline-command
    action: |
      echo "executed generic-multiline-command #1"
      echo "executed generic-multiline-command #2"
      echo "executed generic-multiline-command #3"
    type: shell
    alias: gmc
    long_name: A generic multiline command

  - name: multiline-command-as-list
    action:
      - 'echo "executed generic-multiline-command #1"'
      - 'echo "executed generic-multiline-command #2"'
      - 'echo "executed generic-multiline-command #3"'
    type: shell
    alias: mcal
    long_name: A multiline command as list

  - name: a-simple-formatted-command
    alias: asfc
    long_name: A formatted command
    type: shell
    envs:
      dev: development
      qa: quality assurance
    action: 'echo "environment: {env_args}, tool: {tool.long_name}"'

  - name: a-complex-formatted-command
    alias: acfc
    long_name: A formatted command
    type: shell
    envs:
      dev:
        name: 'John'
        age: 30
      qa:
        name: 'Jane'
        age: 40
    action: 'echo "Hello {env_args[name]}, you are {env_args[age]} years old"'

  - name: all-tool-args-are-replaced
    alias: ataar
    long_name: A formatted command
    type: shell
    envs:
      dev: 32
      qa: 123
    action: |
      echo "tool alias is {tool.alias}, selected env is {env.long_name}"
      echo "env_args is {env_args}, cli_args are {cli_args[positional][0]} and {cli_args[optional][cli_optional]}"

  - name: inline-command-with-PATH
    action: 'echo "$PATH"'
    type: shell
    alias: icwp
    long_name: An inline command with PATH access

  - name: failing-command
    action: i-dont-exist
    type: shell
    alias: fc
    long_name: A failing command

  - name: p-m-import-error
    action: p_m_import_error
    type: shell
    alias: pmie
    long_name: Python Module Import Error Test

  - name: p-m-script-error
    action: p_m_script_error
    type: shell
    alias: pmse
    long_name: Python Module Script Error Test

  - name: p-m-inner-script-error
    action: inner.p_m_inner_script_error
    type: shell
    alias: pmise
    long_name: Python Module Inner Script Error Test